import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Navbar from "../components/Navbar";
import { Marketplace } from "../components/Marketplace";
import  Market from "../utils/abi.json";
import { ethers } from "ethers";
import { useEffect, useState } from "react";
import axios from "axios";
// import abi
export default function Home() {
  const address = process.env.CONTRACT_ADDRESS
  // console.log(address);
  const [account, setAccount] = useState(null);
  const [dataFetched, setDataFetched] = useState(false)
  const [NFTs, setNFTs] = useState()
  useEffect(() => {
    // setAccount(window.ethereum.selectedAddress);
    console.log(account);
    const connected = window.ethereum.isConnected();
    if(account!=null){
      console.log("Connected",connected);
      getAllNFTs();
    }
  }, []);
  const getAllNFTs = async () => {
    console.log("Getting NFTs");
    const provider = new ethers.providers.Web3Provider(window.ethereum,"any");
    await provider.send('eth_requestAccounts', []);
    const signer =  provider.getSigner();
    // console.log(signer,process.env.CONTRACT_ADDRESS);
    const contract = new ethers.Contract(address, Market.abi, signer);
    // console.log(contract);
    const transaction = await contract.getAllNFTS();

    // await transaction.wait();
    const items  = await Promise.all(
      transaction.map(async (item) => {
        // console.log(item);
        const tokenUri = await contract.tokenURI(item.tokenId);
        // console.log(tokenUri);
        let meta = await axios.get(tokenUri,{
          headers: {
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Credentials": "true",
            "Access-Control-Allow-Headers":"content-type",
            "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS"
          }
        });
        meta = Object.keys(meta.data)[0];
        // console.log(JSON.parse(meta));
        meta = JSON.parse(meta);
        // console.log(meta.name);
        let price = ethers.utils.formatUnits(item.price.toString(), "ether");
        let itemData = {
          price,
          tokenId: item.tokenId.toNumber(),
          seller: item.seller,
          owner: item.owner,
          image: meta.image,
          name: meta.name,
          description: meta.description,
        }
        return itemData;
      })
    )
    setNFTs(items);
    console.log(items);
    setDataFetched(true)
  };
  if(!dataFetched && account!=null){
    getAllNFTs()
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-primary w-screen ">
        <section className="w-full h-screen">
          <Navbar setAccount={setAccount} account={account} />
          <div className="intro"></div>
        </section>
        <section className="marketplace w-full  py-8 bg-primary">
          <h1 className="text-5xl text-center  text-white">
            Explore Latest NFTs
          </h1>
          <div className="w-full h-screen my-4 px-8">
            <Marketplace nfts={NFTs} />
          </div>
        </section>
      </main>
    </div>
  );
}
